function Bresenham.nextPoint 10
    push argument 0
    push argument 2
    eq
    push argument 1
    push argument 3
    eq
    and
    not
    if-goto Bresenham_1
    push constant 0
    push argument 4
    add
    push argument 0
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push argument 4
    add
    push argument 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 0
    return
    goto Bresenham_0
label Bresenham_1
label Bresenham_0
    push argument 2
    push argument 0
    sub
    pop local 0
    push argument 3
    push argument 1
    sub
    pop local 1
    push local 0
    push constant 0
    gt
    not
    if-goto Bresenham_3
    push constant 1
    pop local 2
    goto Bresenham_2
label Bresenham_3
    push local 0
    push constant 0
    lt
    not
    if-goto Bresenham_5
    push constant 1
    neg
    pop local 2
    goto Bresenham_4
label Bresenham_5
    push constant 0
    pop local 2
label Bresenham_4
label Bresenham_2
    push local 1
    push constant 0
    gt
    not
    if-goto Bresenham_7
    push constant 1
    pop local 3
    goto Bresenham_6
label Bresenham_7
    push local 1
    push constant 0
    lt
    not
    if-goto Bresenham_9
    push constant 1
    neg
    pop local 3
    goto Bresenham_8
label Bresenham_9
    push constant 0
    pop local 3
label Bresenham_8
label Bresenham_6
    push local 0
    call Math.abs 1
    pop local 4
    push local 1
    call Math.abs 1
    pop local 5
    push local 4
    push local 5
    gt
    not
    if-goto Bresenham_11
    push constant 1
    neg
    pop local 6
    goto Bresenham_10
label Bresenham_11
    push constant 0
    pop local 6
label Bresenham_10
    push local 6
    not
    if-goto Bresenham_13
    push constant 2
    push local 5
    call Math.multiply 2
    push local 4
    sub
    pop local 7
    push argument 0
    push local 2
    add
    pop local 8
    push argument 1
    pop local 9
    push local 7
    push constant 1
    neg
    gt
    not
    if-goto Bresenham_15
    push argument 1
    push local 3
    add
    pop local 9
    goto Bresenham_14
label Bresenham_15
label Bresenham_14
    push constant 0
    push argument 4
    add
    push local 8
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push argument 4
    add
    push local 9
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    goto Bresenham_12
label Bresenham_13
    push constant 2
    push local 4
    call Math.multiply 2
    push local 5
    sub
    pop local 7
    push argument 1
    push local 3
    add
    pop local 9
    push argument 0
    pop local 8
    push local 7
    push constant 1
    neg
    gt
    not
    if-goto Bresenham_17
    push argument 0
    push local 2
    add
    pop local 8
    goto Bresenham_16
label Bresenham_17
label Bresenham_16
    push constant 0
    push argument 4
    add
    push local 8
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push argument 4
    add
    push local 9
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
label Bresenham_12
    push constant 0
    return